module rom3(clk,addr,data_out);
input clk;
input [3:0] addr;

output reg [10:0] data_out;

always @(posedge clk) 
	case(addr)                    /////
		4'b0000: data_out=11'b00000000000;
		4'b0001: data_out=11'b00000011111; //.49
		4'b0010: data_out=11'b00000011001;// .41
		4'b0011: data_out=11'b00000111000;// /89
		4'b0100: data_out=11'b00000010000; //.27
		4'b0101: data_out=11'b00000110000; //.76
		4'b0110: data_out=11'b00000101010; //.67
		4'b0111: data_out=11'b0000100101; // 1.16
		4'b1000: data_out=11'b00000000110; // .097
		4'b1001: data_out=11'b00000100101;  //.587
		4'b1010: data_out=11'b00000011111; //.49
		4'b1011: data_out=11'b00001000000; //1
		4'b1100: data_out=11'b00000010111; // .367
		4'b1101: data_out=11'b00000110110; // .857
		4'b1110: data_out=11'b00000110000; // .767
		4'b1111: data_out=11'b00001010000; // 1.25
		default: data_out=11'b00000000000;
	endcase 

endmodule 
